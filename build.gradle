import org.hidetake.gradle.swagger.generator.GenerateSwaggerUI
import org.springframework.boot.gradle.tasks.bundling.BootJar

buildscript {
    ext {
        restdocsApiSpecVersion = '0.16.2'
    }
}
plugins {
    id 'org.springframework.boot' version '2.7.0-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
    id 'org.hidetake.swagger.generator' version '2.18.2'
    id 'java'
    id 'war'
}

group = 'com.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
openapi3 {
    setServer("http://localhost:8080")
    title = "restdocs-swagger API Documentation"
    description = "Spring REST Docs with SwaggerUI."
    version = "0.0.1"
    format = "yaml"
}
swaggerSources {
    sample {
        setInputFile(file("${project.buildDir}/api-spec/openapi3.yaml"))
    }
}
repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // spring web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'

    // auto build
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // spring-security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // aop
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // session
    implementation 'org.springframework.session:spring-session-core'

    // mybatis
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
    implementation group: 'org.mybatis', name: 'mybatis', version: '3.5.7'
    implementation group: 'org.mybatis', name: 'mybatis-spring', version: '2.0.6'

    // mysql
    runtimeOnly 'mysql:mysql-connector-java'

    //lo4jdbc 쿼리 로그
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

    // srping docs
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.8'

    //aspect
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // spring webflux
    testImplementation 'org.springframework:spring-webflux'

    // spring graphql
    testImplementation 'org.springframework.graphql:spring-graphql-test'

    // Spring Rest Docs
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
    testImplementation "com.epages:restdocs-api-spec-restassured:${restdocsApiSpecVersion}"
    testImplementation 'io.rest-assured:rest-assured'

    // swagger
    swaggerUI 'org.webjars:swagger-ui:4.11.1'
//    implementation 'io.springfox:springfox-boot-starter:3.0.0'
//    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    // jsp
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation "javax.servlet:jstl:1.2"

    // jwt 사용
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    // JSONParser, JSONObject
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'

    // gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.8'


    // http client
    implementation group: 'commons-httpclient', name: 'commons-httpclient', version: '3.1'
    implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.13'

}
ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile
sourceSets {
    main {
        resources {
            srcDirs "src/main/resources", "src/main/resources-env/${profile}"
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
    processResources {
        duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.INCLUDE
    }
}

// GenerateSwaggerUI 태스크가, openapi3 task 를 의존하도록 설정
tasks.withType(GenerateSwaggerUI) {
    dependsOn 'openapi3'
}

// 생성된 SwaggerUI 를 jar 에 포함시키기 위해 build/resources 경로로 로 복사
tasks.register('copySwaggerUI', Copy) {
    dependsOn 'generateSwaggerUISample'
    def generateSwaggerUISampleTask = tasks.named('generateSwaggerUISample', GenerateSwaggerUI).get()

    from("${generateSwaggerUISampleTask.outputDir}")
    into("${project.buildDir}/resources/main/static/docs")
}

tasks.withType(BootJar) {
    dependsOn 'copySwaggerUI'
}